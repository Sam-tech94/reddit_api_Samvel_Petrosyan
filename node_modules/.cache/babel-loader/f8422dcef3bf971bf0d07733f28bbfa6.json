{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/reddit-feed-app/src/components/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { PaginationStyle } from \"./styles/PaginationStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    articles\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 10;\n  const totalPosts = articles.length;\n  const pageNumbers = [];\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = articles.slice(indexOfFirstPost, indexOfLastPost);\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const paginate = pageNumber => set;\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(PaginationStyle, {\n      onClick: () => paginate(number)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","PaginationStyle","Pagination","articles","currentPage","setCurrentPage","postsPerPage","totalPosts","length","pageNumbers","indexOfLastPost","indexOfFirstPost","currentPosts","slice","i","Math","ceil","push","paginate","pageNumber","set","map","number"],"sources":["/Users/tumolabsstudent/Desktop/reddit-feed-app/src/components/Pagination.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { PaginationStyle } from \"./styles/PaginationStyles\";\n\nconst Pagination = ({articles}) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const postsPerPage = 10;\n    const totalPosts = articles.length;\n    const pageNumbers = [];\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = articles.slice(indexOfFirstPost, indexOfLastPost);\n\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    const paginate = pageNumber => set\n\n    return (\n        <ul>\n            {\n                pageNumbers.map(number => (\n                    <PaginationStyle onClick={() => paginate(number)}>\n\n                    </PaginationStyle>\n                ))\n            }\n        </ul>\n    );\n};\n\nexport default Pagination;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,2BAAhC;;;AAEA,MAAMC,UAAU,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC/B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAMM,YAAY,GAAG,EAArB;EACA,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,MAA5B;EACA,MAAMC,WAAW,GAAG,EAApB;EAEA,MAAMC,eAAe,GAAGN,WAAW,GAAGE,YAAtC;EACA,MAAMK,gBAAgB,GAAGD,eAAe,GAAGJ,YAA3C;EACA,MAAMM,YAAY,GAAGT,QAAQ,CAACU,KAAT,CAAeF,gBAAf,EAAiCD,eAAjC,CAArB;;EAEA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUT,UAAU,GAAGD,YAAvB,CAArB,EAA2DQ,CAAC,EAA5D,EAAgE;IAC5DL,WAAW,CAACQ,IAAZ,CAAiBH,CAAjB;EACH;;EAED,MAAMI,QAAQ,GAAGC,UAAU,IAAIC,GAA/B;;EAEA,oBACI;IAAA,UAEQX,WAAW,CAACY,GAAZ,CAAgBC,MAAM,iBAClB,QAAC,eAAD;MAAiB,OAAO,EAAE,MAAMJ,QAAQ,CAACI,MAAD;IAAxC;MAAA;MAAA;MAAA;IAAA,QADJ;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CA3BD;;GAAMpB,U;;KAAAA,U;AA6BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}