{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/reddit-feed-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport { GlobalStyle } from \"./components/styles/GlobalStyle\";\nimport Articles from \"./components/Articles\";\nimport Pagination from \"./components/Pagination\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://www.reddit.com/r/webdev.json\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [articles, setArticles] = useState([]);\n  const [subReddit, setSubReddit] = useState('webdev');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const [searchParams] = useSearchParams();\n  console.log(articles);\n  useEffect(() => {\n    axios.get(`${url}`).then(data => {\n      setLoading(false);\n      setArticles(data.data.data.children);\n      setError(\"\");\n    }).catch(err => {\n      setLoading(false);\n      setArticles([]);\n      setError(err.message);\n    });\n  }, [searchParams.toString()]);\n\n  const handleInputChange = e => setSubReddit(e.target.value); // Get current page\n\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = articles.slice(indexOfFirstPost, indexOfLastPost); // Get page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      handleInputChange: handleInputChange,\n      subReddit: subReddit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Articles, {\n      loading: loading,\n      articles: currentPosts,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: articles.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BvhHxO2hzHzyMnzEtHrifPHzguo=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","GlobalStyle","Articles","Pagination","useSearchParams","url","App","loading","setLoading","error","setError","articles","setArticles","subReddit","setSubReddit","currentPage","setCurrentPage","postsPerPage","searchParams","console","log","get","then","data","children","catch","err","message","toString","handleInputChange","e","target","value","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"sources":["/Users/tumolabsstudent/Desktop/reddit-feed-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport { GlobalStyle } from \"./components/styles/GlobalStyle\";\nimport Articles from \"./components/Articles\";\nimport Pagination from \"./components/Pagination\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst url = \"https://www.reddit.com/r/webdev.json\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [articles, setArticles] = useState([]);\n  const [subReddit, setSubReddit] = useState('webdev');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const [searchParams] = useSearchParams();\n  \n\n  console.log(articles)\n\n  useEffect(() => {\n    axios.get(`${url}`)\n    .then(data => {\n      setLoading(false)\n      setArticles(data.data.data.children)\n      setError(\"\")\n    })\n    .catch(err => {\n      setLoading(false)\n      setArticles([])\n      setError(err.message)\n    })\n  }, [searchParams.toString()]);\n\n  const handleInputChange = (e) => setSubReddit(e.target.value);\n\n  // Get current page\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = articles.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Get page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Header handleInputChange={handleInputChange} subReddit={subReddit} />\n      <Articles loading={loading} articles={currentPosts} error={error} />\n      <Pagination postsPerPage={postsPerPage} totalPosts={articles.length} paginate={paginate}  />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AAEA,MAAMC,GAAG,GAAG,sCAAZ;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,QAAD,CAA1C;EACA,MAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACoB,YAAD,IAAiBpB,QAAQ,CAAC,EAAD,CAA/B;EACA,MAAM,CAACqB,YAAD,IAAiBd,eAAe,EAAtC;EAGAe,OAAO,CAACC,GAAR,CAAYT,QAAZ;EAEAb,SAAS,CAAC,MAAM;IACdC,KAAK,CAACsB,GAAN,CAAW,GAAEhB,GAAI,EAAjB,EACCiB,IADD,CACMC,IAAI,IAAI;MACZf,UAAU,CAAC,KAAD,CAAV;MACAI,WAAW,CAACW,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeC,QAAhB,CAAX;MACAd,QAAQ,CAAC,EAAD,CAAR;IACD,CALD,EAMCe,KAND,CAMOC,GAAG,IAAI;MACZlB,UAAU,CAAC,KAAD,CAAV;MACAI,WAAW,CAAC,EAAD,CAAX;MACAF,QAAQ,CAACgB,GAAG,CAACC,OAAL,CAAR;IACD,CAVD;EAWD,CAZQ,EAYN,CAACT,YAAY,CAACU,QAAb,EAAD,CAZM,CAAT;;EAcA,MAAMC,iBAAiB,GAAIC,CAAD,IAAOhB,YAAY,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7C,CA1Ba,CA4Bb;;;EACA,MAAMC,eAAe,GAAGlB,WAAW,GAAGE,YAAtC;EACA,MAAMiB,gBAAgB,GAAGD,eAAe,GAAGhB,YAA3C;EACA,MAAMkB,YAAY,GAAGxB,QAAQ,CAACyB,KAAT,CAAeF,gBAAf,EAAiCD,eAAjC,CAArB,CA/Ba,CAiCb;;EACA,MAAMI,QAAQ,GAAGC,UAAU,IAAItB,cAAc,CAACsB,UAAD,CAA7C;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,iBAAiB,EAAET,iBAA3B;MAA8C,SAAS,EAAEhB;IAAzD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,QAAD;MAAU,OAAO,EAAEN,OAAnB;MAA4B,QAAQ,EAAE4B,YAAtC;MAAoD,KAAK,EAAE1B;IAA3D;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,UAAD;MAAY,YAAY,EAAEQ,YAA1B;MAAwC,UAAU,EAAEN,QAAQ,CAAC4B,MAA7D;MAAqE,QAAQ,EAAEF;IAA/E;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA5CQ/B,G;UAOgBF,e;;;KAPhBE,G;AA8CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}