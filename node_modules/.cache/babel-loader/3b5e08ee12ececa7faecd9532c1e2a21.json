{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/reddit-feed-app/src/App.js\";\nimport React from \"react\"; // import axios from \"axios\";\n// import {GlobalStyle} from \"./components/styles/GlobalStyle\"\n// import Header from \"./components/Header\";\n// import Articles from \"./components/Articles\";\n// import Pagination from \"./components/Pagination\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [articles, setArticles] = useState([]);\n  // const [subReddit, setSubReddit] = useState('webdev');\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [postsPerPage] = useState(10);\n  //console.log(articles)\n  // useEffect(() => {\n  //   axios.get(`https://www.reddit.com/r/${subReddit}.json`)\n  //   .then(res => {\n  //     setArticles(res.data.data.children)\n  //     setError(\"\")\n  //   })\n  //   .catch(err => {\n  //     setArticles([])\n  //     setError(err.message)\n  //   })\n  //   .finally(() => setLoading(false))\n  // }, [subReddit]);\n  // const handleInputChange = (e) => setSubReddit(e.target.value);\n  // // Get current page\n  // const indexOfLastPost = currentPage * postsPerPage;\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // const currentPosts = articles.slice(indexOfFirstPost, indexOfLastPost);\n  // // Get page\n  // const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Articles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App"],"sources":["/Users/tumolabsstudent/Desktop/reddit-feed-app/src/App.js"],"sourcesContent":["import React from \"react\";\n// import axios from \"axios\";\n// import {GlobalStyle} from \"./components/styles/GlobalStyle\"\n// import Header from \"./components/Header\";\n// import Articles from \"./components/Articles\";\n// import Pagination from \"./components/Pagination\";\n\nfunction App() {\n    // const [loading, setLoading] = useState(true);\n    // const [error, setError] = useState(\"\");\n    // const [articles, setArticles] = useState([]);\n    // const [subReddit, setSubReddit] = useState('webdev');\n    // const [currentPage, setCurrentPage] = useState(1);\n    // const [postsPerPage] = useState(10);\n    \n    //console.log(articles)\n\n    // useEffect(() => {\n    //   axios.get(`https://www.reddit.com/r/${subReddit}.json`)\n    //   .then(res => {\n    //     setArticles(res.data.data.children)\n    //     setError(\"\")\n    //   })\n    //   .catch(err => {\n    //     setArticles([])\n    //     setError(err.message)\n    //   })\n    //   .finally(() => setLoading(false))\n    // }, [subReddit]);\n\n      // const handleInputChange = (e) => setSubReddit(e.target.value);\n\n      // // Get current page\n      // const indexOfLastPost = currentPage * postsPerPage;\n      // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n      // const currentPosts = articles.slice(indexOfFirstPost, indexOfLastPost);\n\n      // // Get page\n      // const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n\n  return (\n    <div className=\"App\">\n      {/* <GlobalStyle />\n      <Header handleInputChange={handleInputChange} subReddit={subReddit} />\n      <Articles loading={loading} articles={currentPosts} error={error} />\n      <Pagination postsPerPage={postsPerPage} totalPosts={articles.length} paginate={paginate}  /> */}\n\n      <Articles />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EACX;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEE;EAEA;EACA;EACA;EACA;EAEA;EACA;EAIJ,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBAME,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA;EANF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;KA7CQA,G;AA+CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}