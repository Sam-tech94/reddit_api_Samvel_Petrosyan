{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/reddit-feed-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GlobalStyle } from \"./components/styles/GlobalStyle\";\nimport Header from \"./components/Header\";\nimport Articles from \"./components/Articles\";\nimport Pagination from \"./components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [articles, setArticles] = useState([]);\n  // const [subReddit, setSubReddit] = useState('webdev');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10); //console.log(articles)\n  // useEffect(() => {\n  //   axios.get(`https://www.reddit.com/r/${subReddit}.json`)\n  //   .then(res => {\n  //     setArticles(res.data.data.children)\n  //     setError(\"\")\n  //   })\n  //   .catch(err => {\n  //     setArticles([])\n  //     setError(err.message)\n  //   })\n  //   .finally(() => setLoading(false))\n  // }, [subReddit]);\n\n  const handleInputChange = e => setSubReddit(e.target.value); // Get current page\n\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = articles.slice(indexOfFirstPost, indexOfLastPost); // Get page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      handleInputChange: handleInputChange,\n      subReddit: subReddit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Articles, {\n      loading: loading,\n      articles: currentPosts,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: articles.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KSFn5xAndfNfNxPmZo7A5sQ6kAQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","GlobalStyle","Header","Articles","Pagination","App","currentPage","setCurrentPage","postsPerPage","handleInputChange","e","setSubReddit","target","value","indexOfLastPost","indexOfFirstPost","currentPosts","articles","slice","paginate","pageNumber","subReddit","loading","error","length"],"sources":["/Users/tumolabsstudent/Desktop/reddit-feed-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {GlobalStyle} from \"./components/styles/GlobalStyle\"\nimport Header from \"./components/Header\";\nimport Articles from \"./components/Articles\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n    // const [loading, setLoading] = useState(true);\n    // const [error, setError] = useState(\"\");\n    // const [articles, setArticles] = useState([]);\n    // const [subReddit, setSubReddit] = useState('webdev');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage] = useState(10);\n    \n    //console.log(articles)\n\n    // useEffect(() => {\n    //   axios.get(`https://www.reddit.com/r/${subReddit}.json`)\n    //   .then(res => {\n    //     setArticles(res.data.data.children)\n    //     setError(\"\")\n    //   })\n    //   .catch(err => {\n    //     setArticles([])\n    //     setError(err.message)\n    //   })\n    //   .finally(() => setLoading(false))\n    // }, [subReddit]);\n\n      const handleInputChange = (e) => setSubReddit(e.target.value);\n\n      // Get current page\n      const indexOfLastPost = currentPage * postsPerPage;\n      const indexOfFirstPost = indexOfLastPost - postsPerPage;\n      const currentPosts = articles.slice(indexOfFirstPost, indexOfLastPost);\n\n      // Get page\n      const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Header handleInputChange={handleInputChange} subReddit={subReddit} />\n      <Articles loading={loading} articles={currentPosts} error={error} />\n      <Pagination postsPerPage={postsPerPage} totalPosts={articles.length} paginate={paginate}  />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX;EACA;EACA;EACA;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACU,YAAD,IAAiBV,QAAQ,CAAC,EAAD,CAA/B,CANW,CAQX;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAMW,iBAAiB,GAAIC,CAAD,IAAOC,YAAY,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAA7C,CAvBS,CAyBT;;;EACA,MAAMC,eAAe,GAAGR,WAAW,GAAGE,YAAtC;EACA,MAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAA3C;EACA,MAAMQ,YAAY,GAAGC,QAAQ,CAACC,KAAT,CAAeH,gBAAf,EAAiCD,eAAjC,CAArB,CA5BS,CA8BT;;EACA,MAAMK,QAAQ,GAAGC,UAAU,IAAIb,cAAc,CAACa,UAAD,CAA7C;;EAIJ,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,iBAAiB,EAAEX,iBAA3B;MAA8C,SAAS,EAAEY;IAAzD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,QAAD;MAAU,OAAO,EAAEC,OAAnB;MAA4B,QAAQ,EAAEN,YAAtC;MAAoD,KAAK,EAAEO;IAA3D;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,UAAD;MAAY,YAAY,EAAEf,YAA1B;MAAwC,UAAU,EAAES,QAAQ,CAACO,MAA7D;MAAqE,QAAQ,EAAEL;IAA/E;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA3CQd,G;;KAAAA,G;AA6CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}