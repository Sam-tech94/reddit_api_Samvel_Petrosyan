{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/reddit-feed-app/src/components/Articles.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { BeatLoader } from \"react-spinners\";\nimport Article from \"./Article\"; //import { BeatLoader } from \"react-spinners\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Articles = () => {\n  _s();\n\n  const [data, setData] = useState({\n    articles: [],\n    error: \"\",\n    subReddit: \"webdev\"\n  }); // const [articles, setArticle] = useState([]);\n  // const [error, setError] = useState(\"\");\n  // const [subReddit, setSubReddit] = useState(\"webdev\");\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      axios.get(`https://www.reddit.com/r/${data.subReddit}.json`).then(res => {\n        // setArticle(res.data.data.children);\n        setData(res.data.data.children, data.error, data.subReddit); // setError(\"\");\n      }).catch(error => {\n        setData([], error.message, data.subReddit);\n      });\n    }, 2000);\n    return () => {\n      clearTimeout(id);\n    };\n  }, [data.subReddit]);\n  console.log(articles); // let confirmed = \"\";\n  // if (article !== undefined) {\n  //     confirmed = \n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: subReddit,\n        onChange: e => setSubReddit(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: !articles ? /*#__PURE__*/_jsxDEV(BeatLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 30\n      }, this) : articles.map((article, index) => /*#__PURE__*/_jsxDEV(Article, {\n        data: article.data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 80\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error ? error : null]\n  }, void 0, true);\n};\n\n_s(Articles, \"0JGvloYjIzmED3z0ere6gmg0aUw=\");\n\n_c = Articles;\nexport default Articles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"names":["axios","React","useState","useEffect","BeatLoader","Article","Articles","data","setData","articles","error","subReddit","id","setTimeout","get","then","res","children","catch","message","clearTimeout","console","log","e","setSubReddit","target","value","map","article","index"],"sources":["/Users/tumolabsstudent/Desktop/reddit-feed-app/src/components/Articles.js"],"sourcesContent":["import axios from \"axios\";\nimport React, {useState, useEffect} from \"react\";\nimport { BeatLoader } from \"react-spinners\";\nimport Article from \"./Article\";\n//import { BeatLoader } from \"react-spinners\";\n\nconst Articles = () => {\n    const [data, setData] = useState({articles: [], error: \"\", subReddit: \"webdev\"})\n    // const [articles, setArticle] = useState([]);\n    // const [error, setError] = useState(\"\");\n    // const [subReddit, setSubReddit] = useState(\"webdev\");\n\n    useEffect(() => {\n        const id  = setTimeout(() => {\n            axios.get(`https://www.reddit.com/r/${data.subReddit}.json`)\n            .then(res => {\n                // setArticle(res.data.data.children);\n                setData(res.data.data.children, data.error, data.subReddit)\n                // setError(\"\");\n            })\n            .catch(error => {\n                setData([], error.message, data.subReddit)\n            })\n        }, 2000)\n\n        return () => {\n            clearTimeout(id);\n        };\n    }, [data.subReddit])\n\n    console.log(articles)\n\n    // let confirmed = \"\";\n    // if (article !== undefined) {\n    //     confirmed = \n    // }\n\n    return (\n        <>\n            <header>\n                <input type=\"text\" value={subReddit} onChange={(e) => setSubReddit(e.target.value)} />\n            </header>\n            <article>\n                {/* {article ? article.map((article, index) => <Article key={index} data={article.data} />): <BeatLoader />} */}\n                {!articles ? <BeatLoader /> : articles.map((article, index) => <Article key={index} data={article.data} />)}\n                \n            </article>\n\n            {error ? error : null}\n        </>\n    );\n};\n\nexport default Articles;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;IAACO,QAAQ,EAAE,EAAX;IAAeC,KAAK,EAAE,EAAtB;IAA0BC,SAAS,EAAE;EAArC,CAAD,CAAhC,CADmB,CAEnB;EACA;EACA;;EAEAR,SAAS,CAAC,MAAM;IACZ,MAAMS,EAAE,GAAIC,UAAU,CAAC,MAAM;MACzBb,KAAK,CAACc,GAAN,CAAW,4BAA2BP,IAAI,CAACI,SAAU,OAArD,EACCI,IADD,CACMC,GAAG,IAAI;QACT;QACAR,OAAO,CAACQ,GAAG,CAACT,IAAJ,CAASA,IAAT,CAAcU,QAAf,EAAyBV,IAAI,CAACG,KAA9B,EAAqCH,IAAI,CAACI,SAA1C,CAAP,CAFS,CAGT;MACH,CALD,EAMCO,KAND,CAMOR,KAAK,IAAI;QACZF,OAAO,CAAC,EAAD,EAAKE,KAAK,CAACS,OAAX,EAAoBZ,IAAI,CAACI,SAAzB,CAAP;MACH,CARD;IASH,CAVqB,EAUnB,IAVmB,CAAtB;IAYA,OAAO,MAAM;MACTS,YAAY,CAACR,EAAD,CAAZ;IACH,CAFD;EAGH,CAhBQ,EAgBN,CAACL,IAAI,CAACI,SAAN,CAhBM,CAAT;EAkBAU,OAAO,CAACC,GAAR,CAAYb,QAAZ,EAxBmB,CA0BnB;EACA;EACA;EACA;;EAEA,oBACI;IAAA,wBACI;MAAA,uBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEE,SAA1B;QAAqC,QAAQ,EAAGY,CAAD,IAAOC,YAAY,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;MAAlE;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAA,UAEK,CAACjB,QAAD,gBAAY,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAAZ,GAA6BA,QAAQ,CAACkB,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBAAoB,QAAC,OAAD;QAAqB,IAAI,EAAED,OAAO,CAACrB;MAAnC,GAAcsB,KAAd;QAAA;QAAA;QAAA;MAAA,QAAjC;IAFlC;MAAA;MAAA;MAAA;IAAA,QAJJ,EAUKnB,KAAK,GAAGA,KAAH,GAAW,IAVrB;EAAA,gBADJ;AAcH,CA7CD;;GAAMJ,Q;;KAAAA,Q;AA+CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}